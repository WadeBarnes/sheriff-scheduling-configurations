def PIPELINE_NAME = "deployment/test"

def LIB_NAME= "ss-lib"
def LIB_REPO = "https://github.com/bcgov/sheriff-scheduling-configurations.git"
def LIB_BRANCH = "feature/ocp4"
library identifier: "${LIB_NAME}@${LIB_BRANCH}", 
        retriever: modernSCM(
          [$class: 'GitSCMSource',
          remote: "${LIB_REPO}",
          branches: [[name: "*/${LIB_BRANCH}"]]])  

node {
  def config = load "../workspace@script/jenkins/${PIPELINE_NAME}/config.groovy"
  def source = config.SOURCE_TAG
  def destination = config.DESTINATION_TAG
  def namespace = config.NAME_SPACE
  def appSuffix = config.SUFFIX
  def apps = config.APPS

  apps.each { appName ->
    stage("Deploying ${appName} to ${destination}") {
      script {
        openshift.withCluster() {
          openshift.withProject() {
            echo "Tagging ${appName}:${source} for deployment to ${destination} ..."
            openshift.tag("${appName}:${source}", "${appName}:${destination}")
          }

          echo "Watching rollout of ${appName}${appSuffix} in ${namespace}-${destination} ..."
          openshift.withProject("${namespace}-${destination}") {
              def dc = openshift.selector('dc', "${appName}${appSuffix}")
              // Wait for the deployment to complete.
              // This will wait until the desired replicas are all available
              dc.rollout().status()
          }

          echo "Deployment Complete."
        }
      }
    }
  }
}