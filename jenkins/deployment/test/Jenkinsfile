def PIPELINE_NAME = "deployment/test"

def LIB_NAME= "ss-lib"
def LIB_REPO = "https://github.com/bcgov/sheriff-scheduling-configurations.git"
def LIB_BRANCH = "feature/ocp4"
library identifier: "${LIB_NAME}@${LIB_BRANCH}", 
        retriever: modernSCM(
          [$class: 'GitSCMSource',
          remote: "${LIB_REPO}",
          branches: [[name: "*/${LIB_BRANCH}"]]])  

node {
  def config = load "../workspace@script/jenkins/${PIPELINE_NAME}/config.groovy"

  config.APPS.each { appName ->
    stage("Deploying ${appName} to ${config.DESTINATION_TAG}") {
      script {
        openshift.withCluster() {
          openshift.withProject() {
            echo "Tagging ${appName}:${config.SOURCE_TAG} for deployment to ${config.DESTINATION_TAG} ..."
            openshift.tag("${appName}:${config.SOURCE_TAG}", "${appName}:${config.DESTINATION_TAG}")
          }

          echo "Watching rollout of ${appName}${config.SUFFIX} in ${config.NAME_SPACE}-${config.DESTINATION_TAG} ..."
          openshift.withProject("${config.NAME_SPACE}-${config.DESTINATION_TAG}") {
              def dc = openshift.selector('dc', "${appName}${config.SUFFIX}")
              // Wait for the deployment to complete.
              // This will wait until the desired replicas are all available
              dc.rollout().status()
          }

          echo "Deployment Complete."
        }
      }
    }
  }
}