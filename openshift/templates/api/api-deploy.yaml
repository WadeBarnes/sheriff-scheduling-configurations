kind: Template
apiVersion: v1
metadata:
  name: ${NAME}${SUFFIX}-deployment-template
objects:
  - kind: ExternalNetwork
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}
      network: ${NAME}
      labels:
        name: ${NAME}
        network: ${NAME}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    spec:
      description: |
        Define the network parameters for accessing remote resources.
      entries:
        - ${OIDC_RP_HOST}
      servicePorts:
        - tcp/443

  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the application's API to talk to either the database or pdf microservice, plus a defined set of external resources.
      source:
        - - role=${ROLE}
          - app=${APP_NAME}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
      destination:
        - - role=db
          - app=${APP_NAME}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
        - - ext:name=${NAME}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      location-services-client-username: ${LOCATION_SERVICES_CLIENT_USERNAME}
      location-services-client-password: ${LOCATION_SERVICES_CLIENT_PASSWORD}
      location-services-client-url: ${LOCATION_SERVICES_CLIENT_URL}
      keycloak-client: ${KEYCLOAK_CLIENT}
      keycloak-authority: ${KEYCLOAK_AUTHORITY}
      oidc-rp-host: ${OIDC_RP_HOST}
      keycloak-secret: ${KEYCLOAK_SECRET}
      keycloak-audience: ${KEYCLOAK_AUDIENCE}
      data-protection-encryption-key: ${DATA_PROTECTION_ENCRYPTION_KEY}
      email-service-url: ${EMAIL_SERVICE_URL}
      email-service-auth-url: ${EMAIL_SERVICE_AUTH_URL}
      email-service-client-id: ${EMAIL_SERVICE_CLIENT_ID}
      email-service-client-secret: ${EMAIL_SERVICE_CLIENT_SECRET}
      sender-email: ${SENDER_EMAIL}
      sender-name: ${SENDER_NAME}
      request-access-email: ${REQUEST_ACCESS_EMAIL}
      siteminder-logout-url: ${SITEMINDER_LOGOUT_URL}
    type: Opaque
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}${SUFFIX}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      annotations:
        description: Defines how to deploy the component
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              image: ' '
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 30
                initialDelaySeconds: 3
                timeoutSeconds: 40
                httpGet:
                  path: /api
                  port: 8080
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 60
                initialDelaySeconds: 30
                timeoutSeconds: 40
                httpGet:
                  path: /api
                  port: 8080
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sleep
                      - "20"
              env:
                - name: ASPNETCORE_ENVIRONMENT
                  value: ${ASPNETCORE_ENVIRONMENT}
                - name: ASPNETCORE_URLS
                  value: ${ASPNETCORE_URLS}
                - name: CORS_DOMAIN
                  value: ${CORS_DOMAIN}
                - name: DatabaseConnectionString
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_NAME}${SUFFIX}
                      key: database-connection-string
                - name: LocationServicesClient__Username
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: location-services-client-username
                - name: LocationServicesClient__Password
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: location-services-client-password
                - name: LocationServicesClient__Url
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: location-services-client-url
                - name: Keycloak__Client
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: keycloak-client
                - name: Keycloak__Authority
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: keycloak-authority
                - name: Keycloak__Secret
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: keycloak-secret
                - name: Keycloak__Audience
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: keycloak-audience
                - name: DataProtectionKeyEncryptionKey
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: data-protection-encryption-key
                - name: ChesEmailService__EmailUrl
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: email-service-url
                - name: ChesEmailService__AuthUrl
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: email-service-auth-url
                - name: ChesEmailService__ClientId
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: email-service-client-id
                - name: ChesEmailService__Secret
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: email-service-client-secret
                - name: ChesEmailService__SenderEmail
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: sender-email
                - name: ChesEmailService__SenderName
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: sender-name
                - name: RequestAccessEmailAddress
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: request-access-email
                - name: WebBaseHref
                  value: ${WEB_BASE_HREF}
                - name: SiteMinderLogoutUrl
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: siteminder-logout-url
                - name: Logging__LogLevel__Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker
                  value: ${CONTROLLER_LOGGING_LEVEL}
                - name: Logging__LogLevel__SS.Api.infrastructure.middleware.ErrorHandlingMiddleware
                  value: ${MIDDLEWARE_LOGGING_LEVEL}
                - name: Logging__LogLevel__Microsoft.EntityFrameworkCore.Database.Command
                  value: ${DATABASE_LOGGING_LEVEL}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: ss-api
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: ""
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: Sheriff-Scheduling
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: ss
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies
    required: true
    value: api
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: 01a527-tools
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    value: dev
    required: true
  - name: DB_NAME
    displayName: Database Name
    description: The name assigned to all of the OpenShift resources associated to the PostgreSQL instance.
    required: true
    value: postgresql
  - name: ASPNETCORE_ENVIRONMENT
    displayName: ASP .Net Core Environment
    description: ASP .Net Core Environment
    required: true
    value: Production
  - name: ASPNETCORE_URLS
    displayName: ASP .Net Core URLs
    description: ASP .Net Core URLs
    required: true
    value: http://+:8080
  - name: CORS_DOMAIN
    displayName: CORS Domain
    description: CORS Domain
    required: true
    value: http://localhost:8080
  - name: LOCATION_SERVICES_CLIENT_USERNAME
    displayName: Location Services Client Username
    description: Location Services Client Username.
    required: false
    value: ""
  - name: LOCATION_SERVICES_CLIENT_PASSWORD
    displayName: Location Services Client Password
    description: Location Services Client Password.
    required: false
    value: ""
  - name: LOCATION_SERVICES_CLIENT_URL
    displayName: Location Services Client URL
    description: Location services API base URL.
    required: false
    value: ""
  - name: KEYCLOAK_CLIENT
    displayName: KeyCloak Client
    description: KeyCloak Client
    required: false
    value: ss-api
  - name: KEYCLOAK_AUDIENCE
    displayName: KeyCloak Audience
    description: KeyCloak Audience
    required: false
    value: ss-api
  - name: KEYCLOAK_AUTHORITY
    displayName: KeyCloak Authority
    description: The URL to the KeyCloak authorization endpoint.
    required: false
    value: ""
  - name: OIDC_RP_HOST
    displayName: OIDC RP Hostname
    description: OIDC RP Hostname.  The api-deploy.overrides.sh will parse this from the supplied KEYCLOAK_AUTHORITY, and fetch it from a secret for updates.
    required: false
    value:    
  - name: KEYCLOAK_SECRET
    displayName: KeyCloak Secret
    description: KeyCloak API Secret
    required: false
    value: ""
  - name: DATA_PROTECTION_ENCRYPTION_KEY
    displayName: Data Protection Encryption Key
    description: Data Protection Encryption Key
    required: false
    value: ""
  - name: EMAIL_SERVICE_URL
    displayName: Email Service API URL
    description: Email Service API URL
    required: false
    value: ""
  - name: EMAIL_SERVICE_AUTH_URL
    displayName: Email Service Auth URL
    description: Email Service Auth URL
    required: false
    value: ""
  - name: EMAIL_SERVICE_CLIENT_ID
    displayName: Email Service Client Id
    description: Email Service Client Id
    required: false
    value: ""
  - name: EMAIL_SERVICE_CLIENT_SECRET
    displayName: Email Service Client Secret
    description: Email Service Client Secret
    required: false
    value: ""
  - name: SENDER_EMAIL
    displayName: Sender Email Address
    description: Sender Email Address
    required: false
    value: ""
  - name: SENDER_NAME
    displayName: Sender Name
    description: Sender Name
    required: false
    value: ""
  - name: REQUEST_ACCESS_EMAIL
    displayName: Request Access Email Address
    description: Request Access Email Address
    required: false
    value: ""
  - name: WEB_BASE_HREF
    displayName: Web Base Href
    description: The application host path (Web Base Href).
    value: /sheriff-scheduling/
  - name: SITEMINDER_LOGOUT_URL
    displayName: SiteMinder Logout URL
    description: SiteMinder Logout URL
    required: false
    value: ""
  - name: CONTROLLER_LOGGING_LEVEL
    displayName: Controller Loggin Level
    description: Controller Loggin Level
    required: true
    value: Warning
  - name: MIDDLEWARE_LOGGING_LEVEL
    displayName: Middleware Loggin Level
    description: Middleware Loggin Level
    required: true
    value: Warning
  - name: DATABASE_LOGGING_LEVEL
    displayName: Database Loggin Level
    description: Database Loggin Level
    required: true
    value: Warning
  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "3"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "6"
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 100m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
